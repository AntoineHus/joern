<?xml version="1.0" encoding="UTF-8"?>
<project name="Joern" default="jar" basedir="." xmlns:ivy="antlib:org.apache.ivy.ant">

	<property name="src.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="lib.dir" location="lib" />
	<property name="test.dir" location="src" />
	<property name="test.report.dir" location="testreport" />

	<!-- Ivy path -->
	<property name="ivy.dir" location="ivy/" />
	<property name="ivy.dep.file" location="ivy.xml" />
	<property name="ivy.version" value="2.4.0" />

	<!-- Ivy -->

	<condition property="ivy.jar.exists">
		<available file="${ivy.dir}/ivy-${ivy.version}.jar" />
	</condition>

	<target name="ivy-download" unless="ivy.jar.exists">
		<get dest="${ivy.dir}/ivy-${ivy.version}.jar" src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.version}/ivy-${ivy.version}.jar" />
	</target>

	<target name="ivy-resolve" depends="clean,makedir,ivy-download" description="fetch dependencies with ivy">
		<path id="ivy.lib.path">
			<fileset dir="${ivy.dir}" includes="*.jar" />
		</path>
		<ivy:retrieve pattern="lib/[artifact]-[revision](-[classifier]).[ext]" />
		<ivy:cachepath pathid="default.classpath" />
	</target>

	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${test.report.dir}" />
		<delete dir="${ivy.dir}" />
		<delete dir="${lib.dir}" />
	</target>

	<target name="makedir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${test.report.dir}" />
		<mkdir dir="${ivy.dir}" />
		<mkdir dir="${lib.dir}" />
	</target>

	<target name="compile" depends="ivy-resolve">
		<exec executable="/bin/bash">
			<arg value="genParsers.sh" />
		</exec>
		<javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
			<src path="src" />
			<classpath refid="joern.classpath" />
		</javac>
	</target>

	<!-- Junit class path -->
	<path id="junit.class.path">
		<pathelement location="lib/junit-4.1.jar" />
		<pathelement location="${build.dir}" />
	</path>

	<!-- Add jars to the classpath -->
	<path id="joern.classpath">
		<pathelement location="bin" />
		<path refid="junit.class.path" />
		<pathelement location="${lib.dir}/commons-cli-1.2.jar" />
		<pathelement location="${lib.dir}/lucene-core-3.6.2.jar" />
		<pathelement location="${lib.dir}/neo4j-kernel-2.1.8.jar" />
		<pathelement location="${lib.dir}/neo4j-lucene-index-2.1.8.jar" />
		<pathelement location="${lib.dir}/neo4j-primitive-collections-2.1.8.jar" />
		<pathelement location="${lib.dir}/antlr4-runtime-4.5.3.jar" />
		<pathelement location="${lib.dir}/antlr4-annotations-4.3.jar" />
	</path>

	<target name="jar" depends="clean,makedir,compile">

		<jar destfile="${build.dir}/joern.jar" basedir="${build.dir}" includes="**/*.class">
			<manifest>
				<attribute name="Main-Class" value="tools.index.IndexMain" />
			</manifest>
			<fileset dir="${build.dir}" includes="**/*.class" />
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
		</jar>
	</target>

	<target name="tools" depends="icfg,argumentTainter">
	</target>

	<target name="icfg" depends="compile">
		<jar destfile="${build.dir}/icfg.jar" basedir="${build.dir}" includes="**/*.class">
			<manifest>
				<attribute name="Main-Class" value="tools.icfg.ICFGMain" />
			</manifest>
			<fileset dir="${build.dir}" includes="**/*.class" />
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
		</jar>
	</target>

	<target name="argumentTainter" depends="compile">
		<jar destfile="${build.dir}/argumentTainter.jar" basedir="${build.dir}" includes="**/*.class">
			<manifest>
				<attribute name="Main-Class" value="tools.argumentTainter.ArgumentTainterMain" />
			</manifest>
			<fileset dir="${build.dir}" includes="**/*.class" />
			<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
		</jar>
	</target>


</project>
